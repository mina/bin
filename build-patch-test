#!/bin/bash

cc="gcc"
output_dir=build_allmodconfig_warn/
ncpu=$(grep -c processor /proc/cpuinfo)
build_flags="-Oline -j $ncpu W=1 C=1"
tmpfile_o="old-build.txt"
tmpfile_n="new-build.txt"
rc=0

prep_config() {
  make CC="$cc" O=$output_dir allmodconfig
  ./scripts/config --file $output_dir/.config -d werror
}

git show | grep -q "not-for-review\|only-internal-review" && exit 0

echo "Using $build_flags redirect to $tmpfile_o and $tmpfile_n"
echo "CC=$cc"
$cc --version | head -n1

HEAD=$(git rev-parse HEAD)

touch ${output_dir}/include/generated/utsrelease.h

prep_config
make CC="$cc" O=$output_dir $build_flags 2> >(tee $tmpfile_n >&2) || rc=1

if ! [ -f $tmpfile_o ]; then
	echo "This is baseline build"
	rm $tmpfile_o
	mv $tmpfile_n $tmpfile_o
	exit 0
fi

incumbent=$(grep -i -c "\(warn\|error\)" $tmpfile_o)
current=$(grep -i -c "\(warn\|error\)" $tmpfile_n)

echo
echo
echo "Errors and warnings before: $incumbent this patch: $current"

if [ $current -gt $incumbent ]; then
  echo
  echo
  echo "New errors added" 1>&2
  diff -U 0 $tmpfile_o $tmpfile_n 1>&2

  echo
  echo
  echo "Per-file breakdown" 1>&2
  tmpfile_fo=$(mktemp)
  tmpfile_fn=$(mktemp)

  grep -i "\(warn\|error\)" $tmpfile_o | sed -n 's@\(^\.\./[/a-zA-Z0-9_.-]*.[ch]\):.*@\1@p' | sort | uniq -c \
    > $tmpfile_fo
  grep -i "\(warn\|error\)" $tmpfile_n | sed -n 's@\(^\.\./[/a-zA-Z0-9_.-]*.[ch]\):.*@\1@p' | sort | uniq -c \
    > $tmpfile_fn

  diff -U 0 $tmpfile_fo $tmpfile_fn 1>&2
  rm $tmpfile_fo $tmpfile_fn

  rc=1
fi

rm $tmpfile_o
mv $tmpfile_n $tmpfile_o

exit $rc
